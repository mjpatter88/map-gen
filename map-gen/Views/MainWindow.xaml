<Window x:Class="map_gen.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="MainWindow" Height="600" Width="900"
        xmlns:mg="clr-namespace:map_gen">
    <Window.Resources>
        <mg:MainWindowVM x:Key="mainWindowViewModel" />
    </Window.Resources>
    <Grid DataContext="{StaticResource ResourceKey=mainWindowViewModel}">   <!-- This makes all my bindings access the mainWindowViewModel object. -->
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition></RowDefinition>
            <!--This will take up all the space not yet allocated.-->
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>

        </Grid.ColumnDefinitions>

        <Menu Grid.Row="0" Background="LightGray">
            <!--Remove the background property to get the default 3d look.-->
            <MenuItem Header="File">
                <MenuItem Header="New" ></MenuItem>
                <MenuItem Header="Open"></MenuItem>
                <MenuItem Header="Save"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="Exit"></MenuItem>
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="Undo"></MenuItem>
                <MenuItem Header="Redo"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="Cut"></MenuItem>
                <MenuItem Header="Copy"></MenuItem>
                <MenuItem Header="Paste"></MenuItem>
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="View Help"></MenuItem>
                <MenuItem Header="About"></MenuItem>
            </MenuItem>
        </Menu>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <!--This will take up all the space not yet allocated.-->
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Width="auto" Background="LightSteelBlue">
                <Button Margin="10, 10, 10, 10">Button 1</Button>
                <Button Margin="10, 10, 10, 10">Button 2</Button>
                <Button Margin="10, 10, 10, 10">Button 3</Button>
                <Button Margin="10, 10, 10, 10">Button 4</Button>
                <Button Margin="10, 10, 10, 10">Button 5</Button>
            </StackPanel>
            <!--Need to use a border to get the correct clipping behavior on the canvas.-->
            <Border ClipToBounds="True" Grid.Column="1">
                <!--Need to give it a background to detect all clicks-->
                <!--<Canvas Grid.Column="1" Name="Canvas1" Background="White">-->

                    <!--<Ellipse Canvas.Left="10" Canvas.Top="10" Height="50" Width="50" Stroke="LightSkyBlue" StrokeThickness="2.5" Fill="AliceBlue" Name="Ellipse1"></Ellipse>-->
                    <!--<Polygon Points="100,100 150,75 200,100 200,150 150,175 100,150" Fill="White" Stroke="LightSkyBlue" StrokeThickness="1.5" Name="Polygon1"></Polygon>-->

                <!--</Canvas>-->
                <!-- We use an ItemsControl instead of a canvas to better bind to a collection of objects -->
                <ItemsControl ItemsSource="{Binding Cells}" Background="Ivory" MouseWheel="ItemsControl_MouseWheel" 
                              MouseLeftButtonDown="ItemsControl_MouseLeftButtonDown" MouseLeftButtonUp="ItemsControl_MouseLeftButtonUp" MouseMove="ItemsControl_MouseMove">

                    <!-- This chunk makes the container act like a canvas-->
                    <ItemsControl.ItemsPanel> 
                        <ItemsPanelTemplate>
                            <mg:CartesianCanvas IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <!-- This chunk sets the properties of each item's container (in this case the canvas)? -->
                    <ItemsControl.ItemContainerStyle>
                        <Style>
                            <Setter Property="Canvas.Left" Value="{Binding X}" />
                            <Setter Property="Canvas.Top" Value="{Binding Y}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>

                    <!-- This chunk sets the type of each item along with its properties -->
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Canvas> <!-- We make each cell a canvas so we can have multiple controls/elements in it.-->
                                <Canvas.RenderTransform>
                                    <TransformGroup>
                                                        <!-- We have to do the binding this way since we are inside the ItemsControl which is sourced to each cell.-->
                                        <ScaleTransform ScaleX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Path=DataContext.ZoomLevel}" 
                                                        ScaleY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Path=DataContext.ZoomLevel}" 
                                                        CenterX="{Binding negX}" CenterY="{Binding negY}" />
                                        <TranslateTransform X="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Path=DataContext.TranslateX}"
                                                            Y="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Path=DataContext.TranslateY}" />
                                    </TransformGroup>
                                </Canvas.RenderTransform>
                                <Polygon Points="{Binding Points}" Fill="LightSkyBlue" Stroke="RoyalBlue" StrokeThickness="1.5">
                                </Polygon>
                                <Ellipse Width="5" Height="5" Fill="Ivory" Stroke="RoyalBlue" StrokeThickness="1.5"></Ellipse>
                            </Canvas>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>
        </Grid>
    </Grid>
</Window>
